generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  name         String
  email        String            @unique
  password     String
  role         String            @default("customer")
  contactNo    String
  address      String
  verified     Boolean
  otp          String
  dateOfBirth  DateTime?
  gender       String?
  about        String?
  profession   String?
  reviews      ReviewAndRating[]
  orders       Order[]
  user_address Address[]

  @@map("user")
}

model Address {
  id          String @id @default(uuid())
  street      String
  city        String
  state       String
  postalCode  String
  country     String
  contactNo   String
  description String
  type        String @default("primary")
  userId      String @unique
  user        User   @relation(fields: [userId], references: [id])

  @@map("address")
}

model Category {
  id       String    @id @default(uuid())
  title    String
  services Service[]

  @@map("category")
}

model Service {
  id          String            @id @default(uuid())
  name        String
  price       String
  duration    Int
  description String
  categoryId  String
  reviews     ReviewAndRating[]

  category Category @relation(fields: [categoryId], references: [id])

  @@map("service")
}

model ReviewAndRating {
  id        String @id @default(uuid())
  review    String
  rating    Int
  userId    String
  serviceId String

  user    User    @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])

  @@map("reviewAndRating")
}

model Appointment {
  id         String   @id @default(uuid())
  date       DateTime
  start_time DateTime
  end_time   DateTime

  @@map("appointment")
}

model Order {
  id          String   @id @default(uuid())
  serviceId   Int
  timeSlotId  Int
  totalAmount Float
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user User @relation(fields: [userId], references: [id])

  @@map("order")
}
